{"version":3,"sources":["store/catagories.js","components/storefront/index.js","store/cart.js","components/products/index.js","components/header/index.js","components/cart/index.js","app.js","store/index.js","index.js"],"names":["initialState","categories","name","displayName","products","category","price","inStock","activeCategory","select","type","payload","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","Tooltip","mapDispatchToProps","connect","state","console","log","props","map","ele","title","onClick","Button","cart","add","product","useStyles","makeStyles","root","maxWidth","media","height","filter","classes","Card","className","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","CardActions","size","flexGrow","main","red","AppBar","position","Toolbar","width","right","top","background","paper","ListItem","button","ListItemText","primary","App","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Main","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5de6e9e8.chunk.js","sourcesContent":["\n\n\n\n\nconst initialState = {\n    categories: [\n      { name: 'electronics', displayName: 'Elecronics' },\n      { name: 'food', displayName: 'Food' },\n      { name: 'clothing', displayName: 'Clothing' },\n    ],\n    products: [\n      { name: 'TV', category: 'electronics', price: 699.00, inStock: 5 },\n      { name: 'Radio', category: 'electronics', price: 99.00, inStock: 15 },\n      { name: 'Shirt', category: 'clothing', price: 9.00, inStock: 25 },\n      { name: 'Socks', category: 'clothing', price: 12.00, inStock: 10 },\n      { name: 'Apples', category: 'food', price: .99, inStock: 500 },\n      { name: 'Eggs', category: 'food', price: 1.99, inStock: 12 },\n      { name: 'Bread', category: 'food', price: 2.39, inStock: 90 },\n    ],\n    activeCategory: 'food',\n  };\n\n\n  // Reducers take in 2 inputs (state and action) the default for state will be the initState\n  // its just a switch case statement\n  export default (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n      case 'categories':\n        return {...state,activeCategory : payload};\n      default:\n        return state;\n    }\n  };\n  \n  // Actions\n  // Actions are objects with type and payload\n  export const select = (name) => {\n    return {\n      type: 'categories',\n      payload: name,\n    };\n  };\n  \n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { connect } from 'react-redux';\nimport { select } from '../../store/catagories';\n\n\n\n\n\nconst LightTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n    },\n  }))(Tooltip);\nconst Main = (props) => {\n  \n    return (\n     props.categories.map(ele=>{\n         return(    \n            <LightTooltip title={ele.name} onClick={() => props.select(ele.name)} >\n            <Button>{ele.name}</Button>\n            </LightTooltip>\n         )\n     })\n    );\n  };\n\n  const mapStateToProps = (state) => {\n      console.log('state------>',state)\n    return { categories: state.categories.categories };\n  };\n\n\n\n  const mapDispatchToProps = { select };\n  export default connect(mapStateToProps, mapDispatchToProps)(Main);\n\n\n","const initialState = {\n    cart: []\n  };\n\n\n  // Reducers take in 2 inputs (state and action) the default for state will be the initState\n  // its just a switch case statement\n  export default (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n      case 'ADD':\n          console.log('add to cart---->',[...state.cart,payload])\n        return { ...state,cart : [...state.cart,payload]};\n      default:\n        return state;\n    }\n  };\n  \n  // Actions\n  // Actions are objects with type and payload\n  export const add = (product) => {\n      console.log('product ------>',product);\n    return {\n      type: 'ADD',\n      payload: product,\n    };\n  };\n  \n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { select } from '../../store/catagories';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { add } from '../../store/cart'\n\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\nconst Main = (props) => {\n    const classes = useStyles();\n    return (\n     props.products.map(ele=>{\n         return(\n            <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image=\"/static/images/cards/contemplative-reptile.jpg\"\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {ele.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                  across all continents except Antarctica\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\"  onClick={() => props.add(ele)}>\n                Add To Cart\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                View Details\n              </Button>\n            </CardActions>\n          </Card>    \n        // <LightTooltip title=\"Add\">\n        // <Button>{ele.name} {ele.category} {ele.price}</Button>\n        // </LightTooltip>\n         )\n     })\n    );\n  };\n\n  const mapStateToProps = (state) => {\n      console.log('state------>',state)\n    let state2 = state.categories.products.filter( ele => ele.category === state.categories.activeCategory);\n    return { products: state2 };\n  };\n\n  const mapDispatchToProps = { select,add };\n  export default connect( mapStateToProps ,mapDispatchToProps)(Main);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    main: red[400],\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            OUR STORE \n          </Typography>\n          <Button color=\"inherit\">cart ({0})</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    console.log('state------>',state)\n  return {  };\n};\nexport default connect(mapStateToProps)(ButtonAppBar);\n","import React from 'react';\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { connect } from 'react-redux';\nimport { add } from '../../store/cart';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\n\n// const LightTooltip = withStyles((theme) => ({\n//     tooltip: {\n//       backgroundColor: theme.palette.common.white,\n//       color: 'rgba(0, 0, 0, 0.87)',\n//       boxShadow: theme.shadows[1],\n//       fontSize: 11,\n//       float : 'right',\n//     },\n//   }))(Tooltip);\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 200,\n      position: 'relative',\n      right: -500,\n      top :50,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  \n \nconst Cart = (props) => {\n    const classes = useStyles();\n    console.log('cart ----->',props)\n    return (\n        // <>\n        // <List component=\"nav\" aria-label=\"main mailbox folders\" className={classes.root}>\n         props.cart.map(ele => {\n         return(  \n             \n            \n            <ListItem button className={classes.root}>\n            \n              <ListItemText primary={ele.name} />\n            </ListItem>  \n            \n\n           \n         )\n     })\n    //  </List>\n    //  </>\n    );\n  };\n\n  const mapStateToProps = (state) => {\n      console.log('state in cart cart------>',state)\n    return { cart : state.cart.cart };\n  };\n\n\n\n  const mapDispatchToProps = { add };\n  export default connect(mapStateToProps, mapDispatchToProps)(Cart);\n\n\n","import React from 'react';\nimport Status from './components/storefront/index';\nimport Product from './components/products'\nimport Header from './components/header'\nimport Cart from './components/cart'\n// import Votes from './components/vote-counter';\nfunction App() {\n  return (\n    <>\n      <Header />\n      \n      {/* <Votes /> */}\n      <Status />\n      <Cart />\n      <h1>Redux!</h1>\n      <Product />\n    </>\n  );\n}\n\nexport default App;","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport categories from './catagories';\nimport cart from './cart';\n\nconst rootReducer = combineReducers({ categories, cart });\n\nconst store = () => {\n  return createStore(rootReducer, composeWithDevTools());\n};\n\nexport default store();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport { Provider } from 'react-redux';\nimport store from './store/';\nfunction Main() {\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  );\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));"],"sourceRoot":""}